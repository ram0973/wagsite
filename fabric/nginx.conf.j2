server {
    if ($host = {{ app_domain }}) {
        return 301 https://$server_name$request_uri;
    }
    server_name {{ app_domain }};
	listen 80;
	listen [::]:80;
    return 404;
}

server {
    charset utf-8;

    server_name {{ app_domain }};
    root {{ app_dir }};

    listen 443 ssl http2;
    listen [::]:443 ssl http2 ipv6only=on;

    server_tokens off; # don't send the nginx version number in error pages and server header

    ssl_protocols TLSv1.3 TLSv1.2; # add ssl_protocols TLSv1 TLSv1.1 if needed;

    # ssl certificate and key
    ssl_certificate /etc/letsencrypt/live/{{ app_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ app_domain }}/privkey.pem;

    # ssl stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ app_domain }}/chain.pem;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    ssl_session_cache shared:le_nginx_SSL:1m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_prefer_server_ciphers on;
    # how to get only TLS 1.2, 1.3 ciphers:
    # list ciphers: $ openssl ciphers -s -tls1_3 -tls1_2
    # list ciphers explained: $ openssl ciphers -s -v | grep -E "TLSv1.2|TLSv1.3"
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256";

    ssl_ecdh_curve secp521r1:secp384r1:prime256v1;

    # security headers https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/
    # use with caution, not sure about all of these, not tested
    {% if env == "prod" %}
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"; # HSTS
    {% endif %}
    add_header X-Frame-Options sameorigin always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Expect-CT "max-age=0" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    add_header X-Permitted-Cross-domain-Policies "master-only";
    add_header Feature-Policy "fullscreen *";
    # HPKP is deprecated with Chrome 67 (https://en.wikipedia.org/wiki/HTTP_Public_Key_Pinning)

    # gzip
    gzip on;
    # gzip_static on;
    gzip_comp_level 2; # less CPU load
    # todo: to check this
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    location /media  {
        alias {{ app_dir }}/public/media;
    }
    location /uploads  {
        alias {{ app_dir }}/public/uploads;
    }
    location /static {
        alias {{ app_dir }}/public/static;
    }
    location /assets {
        alias {{ app_dir }}/public/assets;
    }
    location /favicon.ico {
        alias {{ app_dir }}/public/favicon.ico;
    }
    location / {
        {% if env == "dev" %}
        proxy_pass http://localhost:8000;
        {% else %}
        proxy_pass http://unix:{{ app_dir }}/run/{{ app_name }}.socket;
        {% endif %}
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;
    }
}
